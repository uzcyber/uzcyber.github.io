{"openapi":"3.0.1","info":{"title":"Commerce Webservices","description":"These services manage all of the common commerce functionality, and also include customizations from installed AddOns. The implementing extension is called commercewebservices.","license":{"name":"Use of this file is subject to the terms of your agreement with SAP SE or its affiliates respecting the use of the SAP product for which this file relates.","url":""},"version":"2.2.1"},"externalDocs":{"description":"SAP Commerce Cloud","url":"https://help.sap.com/docs/SAP_COMMERCE_CLOUD_PUBLIC_CLOUD"},"servers":[{"url":"http://localhost:9001/occ/v2","description":"Generated server url"}],"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}],"paths":{"/{baseSiteId}/users/{userId}":{"get":{"tags":["Users"],"summary":"Get customer profile","description":"Returns customer profile.","operationId":"getUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Users"],"summary":"Updates customer profile","description":"Updates customer profile. Attributes not provided in the request body will be defined again (set to null or default).","operationId":"replaceUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Users"],"summary":"Delete customer profile.","description":"Removes customer profile.","operationId":"removeUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Users"],"summary":"Updates customer profile","description":"Updates customer profile. Only attributes provided in the request body will be changed.","operationId":"updateUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}":{"get":{"tags":["Payment Details"],"summary":"Get customer's credit card payment details.","description":"Returns a customer's credit card payment details for the specified paymentDetailsId.","operationId":"getPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Payment Details"],"summary":"Updates existing customer's credit card payment info.","description":"Updates existing customer's credit card payment info based on the payment info ID. Attributes not given in request will be defined again (set to null or default).","operationId":"replacePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Payment Details"],"summary":"Deletes customer's credit card payment details.","description":"Deletes a customer's credit card payment details based on a specified paymentDetailsId.","operationId":"removePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Payment Details"],"summary":"Updates existing customer's credit card payment details.","description":"Updates an existing customer's credit card payment details based on the specified paymentDetailsId. Only those attributes provided in the request will be updated.","operationId":"updatePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/password":{"put":{"tags":["Users"],"summary":"Changes customer's password","description":"Changes customer's password.","operationId":"replaceUserPassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"new","in":"query","description":"New password.","required":true,"schema":{"type":"string"}},{"name":"old","in":"query","description":"Old password. Required only for ROLE_CUSTOMERGROUP","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/login":{"put":{"tags":["Users"],"summary":"Changes customer's login name.","description":"Changes a customer's login name. Requires the customer's current password.","operationId":"replaceUserLogin","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"newLogin","in":"query","description":"Customer's new login name. Customer login is case insensitive.","required":true,"schema":{"type":"string"}},{"name":"password","in":"query","description":"Customer's current password.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/paymentdetails":{"put":{"tags":["Cart Payments"],"summary":"Sets credit card payment details for the cart.","description":"Sets credit card payment details for the specified cart.","operationId":"replaceCartPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"query","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Payments"],"summary":"Defines and assigns details of a new credit card payment to the cart.","description":"Defines the details of a new credit card, and assigns this payment option to the cart.","operationId":"createCartPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}":{"get":{"tags":["Cart Entries"],"summary":"Get the details of the cart entries.","description":"Returns the details of the cart entries.","operationId":"getCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"The entry number. Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero (0).","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Cart Entries"],"summary":"Set quantity and store details of a cart entry.","description":"Updates the quantity of a single cart entry and the details of the store where the cart entry will be picked up. Attributes not provided in request will be defined again (set to null or default)","operationId":"replaceCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"The entry number. Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero (0).","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Entries"],"summary":"Deletes cart entry.","description":"Deletes cart entry by entry number.","operationId":"removeCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"The entry number. Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero (0).","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Cart Entries"],"summary":"Update quantity and store details of a cart entry.","description":"Updates the quantity of a single cart entry and the details of the store where the cart entry will be picked up.","operationId":"updateCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"The entry number. Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero (0).","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/email":{"put":{"tags":["Carts"],"summary":"Assigns an email to the cart.","description":"Assigns an email to the cart. This step is required to make a guest checkout.","operationId":"replaceCartGuestUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"email","in":"query","description":"Email of the guest user. It will be used during the checkout process.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/deliverymode":{"get":{"tags":["Cart Delivery Modes"],"summary":"Get the delivery mode selected for the cart.","description":"Returns the delivery mode selected for the cart.","operationId":"getCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/DeliveryMode"}},"application/json":{"schema":{"$ref":"#/components/schemas/DeliveryMode"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Cart Delivery Modes"],"summary":"Sets the delivery mode for a cart.","description":"Sets the delivery mode with a given identifier for the cart.","operationId":"replaceCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"deliveryModeId","in":"query","description":"Delivery mode identifier (code)","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Delivery Modes"],"summary":"Deletes the delivery mode from the cart.","description":"Deletes the delivery mode from the specified cart.","operationId":"removeCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/addresses/delivery":{"put":{"tags":["Cart Addresses"],"summary":"Sets a delivery address for the cart.","description":"Sets a delivery address for the cart. The address country must be placed among the delivery countries of the current base store.","operationId":"replaceCartDeliveryAddress","parameters":[{"name":"addressId","in":"query","description":"Address identifier","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Addresses"],"summary":"Creates a delivery address for the cart.","description":"Creates an address and assigns it to the cart as the delivery address.","operationId":"createCartDeliveryAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Addresses"],"summary":"Deletes the delivery address from the cart.","description":"Deletes the delivery address from the specified cart.","operationId":"removeCartDeliveryAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses/{addressId}":{"get":{"tags":["Address"],"summary":"Get info about address","description":"Returns detailed information about address with a given id.","operationId":"getAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Address"],"summary":"Updates the address","description":"Updates the address. Attributes not provided in the request will be defined again (set to null or default).","operationId":"replaceAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Address"],"summary":"Delete customer's address.","description":"Removes customer's address.","operationId":"removeAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Address"],"summary":"Updates the address","description":"Updates the address. Only attributes provided in the request body will be changed.","operationId":"updateAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}/members":{"put":{"tags":["Customer Groups"],"summary":"Sets members for a user group.","description":"Sets members for a user group. The list of existing members is overwritten with a new one.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"replaceUsersForCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/MemberList"}},"application/json":{"schema":{"$ref":"#/components/schemas/MemberList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Customer Groups"],"summary":"Assigns user(s) to a customer group.","description":"Assigns user(s) to a customer group.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"updateCustomerGroupWithUsers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/MemberList"}},"application/json":{"schema":{"$ref":"#/components/schemas/MemberList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users":{"post":{"tags":["Users"],"summary":" Registers a customer","description":"Registers a customer. Requires the following parameters: login, password, firstName, lastName, titleCode.","operationId":"createUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"sap-commerce-cloud-captcha-token","in":"header","description":"The user's response token returned by captcha provider, for example, the g-recaptcha-response returned by google recaptcha client. When the captchaCheckEnabled = true for the store, the field is mandatory and will call the provider to validate.","schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserSignUp"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserSignUp"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders":{"get":{"tags":["Orders"],"summary":"Get order history for user.","description":"Returns order history data for all orders placed by a specified user for a specified base store. The response can display the results across multiple pages, if required.","operationId":"getUserOrderHistory","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Orders"],"summary":"Place a order.","description":"Authorizes the cart and places the order. The response contains the new order data.","operationId":"placeOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"query","description":"Cart code for logged in user, cart GUID for guest checkout","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Orders"],"summary":"Get total number of orders.","description":"In the response header, the \"x-total-count\" indicates the total number of orders placed by a specified user for a specified base store.","operationId":"countUserOrders","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/cancellation":{"post":{"tags":["Orders"],"summary":"Cancel an order.","description":"Cancels an order partially or completely","operationId":"doCancelOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CancellationRequestEntryInputList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderReturns":{"get":{"tags":["Return Requests"],"summary":"Gets the user's return requests history","description":"Returns order return request data associated with a specified user for a specified base store.","operationId":"getReturnRequests","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Return Requests"],"summary":"Create an order return request.","description":"Creates an order return request.","operationId":"createReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestEntryInputList"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/loginnotification":{"post":{"tags":["Login Notification"],"summary":"Notify about successful login.","description":"Publish notification event about successful login.","operationId":"doPublishSuccessfulLoginEvent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consents":{"post":{"tags":["Consents"],"summary":"A user can give consent.","description":"A user gives consent with specified consent template and version.","operationId":"doGiveConsent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentTemplateId","in":"query","description":"Consent template ID.","required":true,"schema":{"type":"string"}},{"name":"consentTemplateVersion","in":"query","description":"Consent template version.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts":{"get":{"tags":["Carts"],"summary":"Get all customer carts.","description":"Lists all customer carts.","operationId":"getCarts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Optional pagination parameter in case of savedCartsOnly == true. Default value 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Optional {@link PaginationData} parameter in case of savedCartsOnly == true. Default value 20.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"savedCartsOnly","in":"query","description":"Optional parameter. If the parameter is provided and its value is true, only saved carts are returned.","required":false,"schema":{"type":"boolean","default":false}},{"name":"sort","in":"query","description":"Optional sort criterion in case of savedCartsOnly == true. No default value.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Creates or restore a cart for a user.","description":"Creates a new cart or restores an anonymous cart as a user's cart (if an old Cart Id is given in the request).","operationId":"createCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"oldCartId","in":"query","description":"Anonymous cart GUID.","required":false,"schema":{"type":"string"}},{"name":"toMergeCartGuid","in":"query","description":"The GUID of the user's cart that will be merged with the anonymous cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/vouchers":{"get":{"tags":["Cart Promotions"],"summary":"Get a list of vouchers applied to the cart.","description":"Returns a list of vouchers applied to the cart.","operationId":"getCartVouchers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/VoucherList"}},"application/json":{"schema":{"$ref":"#/components/schemas/VoucherList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Promotions"],"summary":"Applies a voucher based on the voucherId defined for the cart.","description":"Applies a voucher based on the voucherId defined for the specified cart.","operationId":"doApplyCartVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}},{"name":"voucherId","in":"query","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/validate":{"post":{"tags":["Carts"],"summary":"Validates the cart","description":"Runs a cart validation and returns the result.","operationId":"validateCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/promotions":{"get":{"tags":["Cart Promotions"],"summary":"Get information about promotions applied on cart.","description":"Returns information about the promotions applied on the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"getCartPromotions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Promotions"],"summary":"Enables promotions based on the promotionsId of the cart.","description":"Enables a promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"doApplyCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"promotionId","in":"query","description":"Promotion identifier (code)","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response":{"get":{"tags":["Carts"],"summary":"Get information about create subscription request results","description":"Returns information related to creating subscription request results. If there is no response from the payment provider, a \"202 Accepted\" status is returned. If the subscription is created successfully, the payment details are returned. Otherwise, an error response is returned.\n\nNote, the ?Try it out? button is not enabled for this method (always returns an error) because the Extended Carts Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the ?acceleratorocc AddOn? documentation on help.hybris.com.","operationId":"getSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Handles response from payment provider and create payment details","description":"Handles the response from the payment provider and creates payment details.\n\nNote, the ?Try it out? button is not enabled for this method (always returns an error) because the Extended Carts Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the ?acceleratorocc AddOn? documentation on help.hybris.com.","operationId":"doHandleSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Carts"],"summary":"Deletes payment provider response related to cart.","description":"Deletes the payment provider response related to the specified cart.","operationId":"removeSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entrygroups/{entryGroupNumber}":{"post":{"tags":["Cart Entry Groups"],"summary":"Add a product to a cart entry group.","description":"Adds a product to a cart entry group.","operationId":"addToCartEntryGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryGroupNumber","in":"path","description":"Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Entry Groups"],"summary":"Delete an entry group.","description":"Removes an entry group from an associated cart. The entry group is identified by an entryGroupNumber. The cart is identified by the cartId.","operationId":"removeCartEntryGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"entryGroupNumber","in":"path","description":"Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries":{"get":{"tags":["Cart Entries"],"summary":"Get cart entries.","description":"Returns cart entries.","operationId":"getCartEntries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Entries"],"summary":"Adds a product to the cart.","description":"Adds a product to the specified cart.","operationId":"createCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/consolidate":{"get":{"tags":["Carts"],"summary":"Get consolidated pickup options.","description":"Returns a list of stores that have all the pick-up items in stock.\n\nNote, if there are no stores that have all the pick up items in stock, or all items are already set to the same pick up location, the response returns an empty list.","operationId":"getConsolidatedPickupLocations","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Handles the consolidating pickup locations.","description":"Specifies one store location where all items will be picked up.\n\nNote, if any of the items are not available at the specified location, these items are removed from the cart.","operationId":"createConsolidatedPickupLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"storeName","in":"query","description":"The name of the store where items will be picked up","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/clonesavedcart":{"post":{"tags":["Save Cart"],"summary":"Explicitly clones a cart.","description":"Explicitly clones a cart and sets the name and description for the cloned cart if given.","operationId":"doCartClone","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"description","in":"query","description":"The description that should be applied to the cloned cart.","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"name","in":"query","description":"The name that should be applied to the cloned cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses":{"get":{"tags":["Address"],"summary":"Get customer's addresses","description":"Returns customer's addresses.","operationId":"getAddresses","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of customer's addresses","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/AddressList"}},"application/json":{"schema":{"$ref":"#/components/schemas/AddressList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Address"],"summary":"Creates a new address.","description":"Creates a new address with detailed information provided.","operationId":"createAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses/verification":{"post":{"tags":["Address"],"summary":"Verifies address.","description":"Verifies provided address.","operationId":"validateAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/AddressValidation"}},"application/json":{"schema":{"$ref":"#/components/schemas/AddressValidation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/resetpassword":{"post":{"tags":["Forgotten Passwords"],"summary":"Reset password after customer's clicked forgotten password link.","description":"Reset password after customer's clicked forgotten password link. A new password needs to be provided.","operationId":"doResetPassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ResetPassword"}},"application/json":{"schema":{"$ref":"#/components/schemas/ResetPassword"}}},"required":true},"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/reviews":{"get":{"tags":["Products"],"summary":"Get reviews for a product","description":"Returns the reviews for a product with a given product code.","operationId":"getProductReviews","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"maxCount","in":"query","description":"Maximum count of reviews","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ReviewList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ReviewList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Products"],"summary":"Creates a new customer review as an anonymous user.","description":"Creates a new customer review as an anonymous user. Review data needs to be provided.","operationId":"createProductReview","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Review"}},"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Review"}},"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/integration/users/{userId}/carts/{cartId}/payment/sop/response":{"post":{"tags":["Merchant Callback"],"summary":"Verify the decision of the Merchant for a cart","description":"Verifies the decision of the merchant for a specified cart, and stores information of the PaymentSubscriptionResult for the cart. \n\nNote, the ?Try it out? button is not enabled for this method (always returns an error) because the Merchant Callback Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the ?acceleratorocc AddOn? documentation on help.hybris.com.","operationId":"doHandleCartMerchantCallback","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/integration/merchant_callback":{"post":{"tags":["Merchant Callback"],"summary":"Verify the decision of the Merchant","description":"Verifies the decision of the merchant. \n\nNote, the ?Try it out? button is not enabled for this method (always returns an error) because the Merchant Callback Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the ?acceleratorocc AddOn? documentation on help.hybris.com.","operationId":"doHandleMerchantCallback","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/forgottenpasswordtokens":{"post":{"tags":["Forgotten Passwords"],"summary":"Generates a token to restore a customer's forgotten password.","description":"Generates a token in order to restore a customer's forgotten password.","operationId":"doRestorePassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"query","description":"Customer's user id. Customer user id is case insensitive.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups":{"get":{"tags":["Customer Groups"],"summary":"Get all subgroups of a customergroup.","description":"Returns all customer groups that are direct subgroups of a customergroup.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"getCustomerGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current page number (starts with 0).","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"pageSize","in":"query","description":"Number of customer group returned in one page.","required":false,"schema":{"type":"integer","format":"int32","default":20}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroupList"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Customer Groups"],"summary":"Creates a new customer group.","description":"Creates a new customer group that is a direct subgroup of a customergroup.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"createCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroup"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderReturns/{returnRequestCode}":{"get":{"tags":["Return Requests"],"summary":"Get the details of a return request.","description":"Returns specific order return request details based on a specific return request code. The response contains detailed order return request information.","operationId":"getReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"returnRequestCode","in":"path","description":"Order return request code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Return Requests"],"summary":"Updates the order return request.","description":"Updates the order return request. Only cancellation of the request is supported by setting the attribute status to CANCELLING. Cancellation of the return request cannot be reverted","operationId":"updateReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"returnRequestCode","in":"path","description":"Order return request code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestModification"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/save":{"patch":{"tags":["Save Cart"],"summary":"Explicitly saves a cart.","description":"Explicitly saves a cart and sets the name and description for the saved cart if given.","operationId":"doSaveCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"saveCartDescription","in":"query","description":"The description that should be applied to the saved cart.","required":false,"schema":{"type":"string"}},{"name":"saveCartName","in":"query","description":"The name that should be applied to the saved cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/restoresavedcart":{"patch":{"tags":["Save Cart"],"summary":"Restore a saved cart.","description":"Restore the data of a saved cart.","operationId":"doUpdateSavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/flagForDeletion":{"patch":{"tags":["Save Cart"],"summary":"Flag a cart for deletion.","description":"Flags a cart for deletion (the cart doesn't have corresponding save cart attributes anymore). The cart is not actually deleted from the database. But with the removal of the saved cart attributes, this cart will be taken care of by the cart removal job just like any other cart.","operationId":"doUpdateFlagForDeletion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores":{"get":{"tags":["Stores"],"summary":"Get a list of store locations","description":"Lists all store locations that are near the location specified in a query or based on latitude and longitude.","operationId":"getStoreLocations","parameters":[{"name":"accuracy","in":"query","description":"Accuracy in meters.","required":false,"schema":{"type":"number","format":"double","default":0.0}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Location in natural language i.e. city or country.","required":false,"schema":{"type":"string"}},{"name":"radius","in":"query","description":"Radius in meters. Max value: 40075000.0 (Earth's perimeter).","required":false,"schema":{"type":"number","format":"double","default":100000.0}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"asc"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreFinderSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreFinderSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Stores"],"summary":"Get a header with the number of store locations.","description":"In the response header, the \"x-total-count\" indicates the number of all store locations that are near the location specified in a query, or based on latitude and longitude.","operationId":"countStoreLocations","parameters":[{"name":"accuracy","in":"query","description":"Accuracy in meters.","required":false,"schema":{"type":"number","format":"double","default":0.0}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"query","in":"query","description":"Location in natural language i.e. city or country.","required":false,"schema":{"type":"string"}},{"name":"radius","in":"query","description":"Radius in meters. Max value: 40075000.0 (Earth's perimeter).","required":false,"schema":{"type":"number","format":"double","default":100000.0}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/stock":{"get":{"tags":["Products"],"summary":"Get a product's stock level.","description":"Returns a product's stock levels sorted by distance from the specified location, which is provided using the free-text \"location\" parameter, or by using the longitude and latitude parameters. The following two sets of parameters are available: location (required), currentPage (optional), pageSize (optional); or longitude (required), latitude (required), currentPage (optional), pageSize(optional).","operationId":"getLocationProductStock","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"latitude","in":"query","description":"Latitude location parameter.","required":false,"schema":{"type":"number","format":"double"}},{"name":"location","in":"query","description":"Free-text location","required":false,"schema":{"type":"string"}},{"name":"longitude","in":"query","description":"Longitude location parameter.","required":false,"schema":{"type":"number","format":"double"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreFinderStockSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreFinderStockSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Products"],"summary":"Get header with a total number of product's stock levels.","description":"In the response header, the \"x-total-count\" indicates the total number of a product's stock levels. The following two sets of parameters are available: location (required); or longitude (required), and latitude (required).","operationId":"countProductStockByLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"latitude","in":"query","description":"Latitude location parameter.","required":false,"schema":{"type":"number","format":"double"}},{"name":"location","in":"query","description":"Free-text location","required":false,"schema":{"type":"string"}},{"name":"longitude","in":"query","description":"Longitude location parameter.","required":false,"schema":{"type":"number","format":"double"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/search":{"get":{"tags":["Products"],"summary":"Get a list of products and additional data","description":"Returns a list of products and additional data, such as available facets, available sorting, and pagination options. It can also include spelling suggestions. To make spelling suggestions work, you need to make sure that \"enableSpellCheck\" on the SearchQuery is set to \"true\" (by default, it should already be set to \"true\"). You also need to have indexed properties configured to be used for spellchecking.","operationId":"getProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Serialized query, free text search, facets. The format of a serialized query: freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2","required":false,"schema":{"type":"string"}},{"name":"searchQueryContext","in":"query","description":"The context to be used in the search query.","required":false,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Products"],"summary":"Get a header with total number of products.","description":"In the response header, the \"x-total-count\" indicates the total number of products satisfying a query.","operationId":"countProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"query","in":"query","description":"Serialized query, free text search, facets. The format of a serialized query: freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/vouchers/{code}":{"get":{"tags":["Vouchers"],"summary":"Get a voucher based on code.","description":"Returns details of a single voucher that is specified by its voucher identification code.","operationId":"getVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Voucher"}},"application/json":{"schema":{"$ref":"#/components/schemas/Voucher"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/paymentdetails":{"get":{"tags":["Payment Details"],"summary":"Get customer's credit card payment details list.","description":"Return customer's credit card payment details list.","operationId":"getPaymentDetailsList","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"saved","in":"query","description":"Type of payment details.","required":false,"schema":{"type":"boolean","default":false}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetailsList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetailsList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}":{"get":{"tags":["Orders"],"summary":"Get a order.","description":"Returns specific order details based on a specific order code. The response contains detailed order information.","operationId":"getUserOrders","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order GUID (Globally Unique Identifier) or order CODE","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/futureStocks":{"get":{"tags":["Future Stocks"],"summary":"Gets the future product availability for the list of specified products.","description":"Returns a list of product codes with a list of future product availability.","operationId":"getFutureStocksList","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCodes","in":"query","description":"Products identifiers.","required":true,"schema":{"type":"string"},"example":"3318057,72399000_55,72399000_56"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductFutureStocksList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/futureStocks/{productCode}":{"get":{"tags":["Future Stocks"],"summary":"Gets the future product availability for the specified product.","description":"Returns a list of future product availability of the specified product.","operationId":"getFutureStocks","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductFutureStocks"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customergroups":{"get":{"tags":["Users"],"summary":"Get all customer groups of a customer.","description":"Returns all customer groups of a customer.","operationId":"getUserCustomerGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroupList"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consenttemplates":{"get":{"tags":["Consents"],"summary":"Fetch the list of consents","description":"If user has not given or withdrawn consent to any of the template, no given or withdraw date is returned.","operationId":"getConsentTemplates","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplateList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplateList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}":{"get":{"tags":["Consents"],"summary":"Fetch the consent.","description":"If user has not given or withdrawn consent to the template, no given or withdraw date is returned.","operationId":"getConsentTemplate","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentTemplateId","in":"path","description":"Consent template id.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}":{"get":{"tags":["Carts"],"summary":"Get a cart with a given identifier.","description":"Returns the cart with a given identifier.","operationId":"getCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Carts"],"summary":"Deletes a cart with a given cart id.","description":"Deletes a cart with a specified cart id.","operationId":"removeCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/savedcart":{"get":{"tags":["Save Cart"],"summary":"Get a saved cart.","description":"Returns a saved cart for an authenticated user. The cart is identified using the \"cartId\" parameter.","operationId":"getSavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/promotions/{promotionId}":{"get":{"tags":["Cart Promotions"],"summary":"Get information about promotion applied on cart.","description":"Returns information about a promotion (with a specific promotionId), that has been applied on the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"getCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"promotionId","in":"path","description":"Promotion identifier (code)","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Promotions"],"summary":"Disables the promotion based on the promotionsId of the cart.","description":"Disables the promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"removeCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"promotionId","in":"path","description":"Promotion identifier (code)","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/request":{"get":{"tags":["Carts"],"summary":"Get information needed for create subscription","description":"Returns the necessary information for creating a subscription that contacts the payment provider directly. This information contains the payment provider URL and a list of parameters that are needed to create the subscription.","operationId":"getSopPaymentRequestDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"extendedMerchantCallback","in":"query","description":"Define which url should be returned","required":false,"schema":{"type":"boolean","default":false}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"responseUrl","in":"query","description":"The URL that the payment provider uses to return payment information. Possible values for responseUrl include the following: ?orderPage_cancelResponseURL?, ?orderPage_declineResponseURL?, and ?orderPage_receiptResponseURL?.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentRequest"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/deliverymodes":{"get":{"tags":["Cart Delivery Modes"],"summary":"Get all delivery modes for the current store and delivery address.","description":"Returns all delivery modes supported for the current base store and cart delivery address. A delivery address must be set for the cart, otherwise an empty list will be returned.","operationId":"getCartDeliveryModes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/DeliveryModeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/DeliveryModeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/titles":{"get":{"tags":["Miscs"],"summary":"Get a list of all localized titles.","description":"Lists all localized titles.","operationId":"getTitles","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/TitleList"}},"application/json":{"schema":{"$ref":"#/components/schemas/TitleList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/{storeId}":{"get":{"tags":["Stores"],"summary":"Get a store location","description":"Returns store location based on its unique name.","operationId":"getStoreLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"storeId","in":"path","description":"Store identifier (currently store name)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfService"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfService"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/storescounts":{"get":{"tags":["Stores"],"summary":"Gets a store location count per country and regions","description":"Returns store counts in countries and regions","operationId":"getLocationCounts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreCountList"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreCountList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/country/{countryIso}":{"get":{"tags":["Stores"],"summary":"Get a list of store locations for a given country","description":"Lists all store locations that are in the specified country.","operationId":"getStoresByCountry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countryIso","in":"path","description":"Country ISO code","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/country/{countryIso}/region/{regionIso}":{"get":{"tags":["Stores"],"summary":"Get a list of store locations for a given country and region","description":"Lists all store locations that are in the specified country and region.","operationId":"getStoresByCountryAndRegion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countryIso","in":"path","description":"Country ISO code","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"regionIso","in":"path","description":"Region ISO code","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/promotions":{"get":{"tags":["Promotions"],"summary":"Get a list of promotions.","description":"Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.","operationId":"getPromotions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"promotionGroup","in":"query","description":"Only promotions from this group are returned","required":false,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Defines what type of promotions should be returned. Values supported for that parameter are: <ul><li>all: All available promotions are returned</li><li>product: Only product promotions are returned</li><li>order: Only order promotions are returned</li></ul>","required":true,"schema":{"type":"string","enum":["all","product","order"]}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/promotions/{code}":{"get":{"tags":["Promotions"],"summary":"Get a promotion based on code","description":"Returns details of a single promotion specified by a promotion code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.","operationId":"getPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Promotion identifier (code)","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Promotion"}},"application/json":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}":{"get":{"tags":["Products"],"summary":"Get product details.","description":"Returns details of a single product according to a product code.","operationId":"getProduct","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Product"}},"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/stock/{storeName}":{"get":{"tags":["Products"],"summary":"Get a product's stock level for a store","description":"Returns a product's stock level for a particular store (in other words, for a particular point of sale).","operationId":"getStoreProductStock","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}},{"name":"storeName","in":"path","description":"Store identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Stock"}},"application/json":{"schema":{"$ref":"#/components/schemas/Stock"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/references":{"get":{"tags":["Products"],"summary":"Get a product reference","description":"Returns references for a product with a given product code. Reference type specifies which references to return.","operationId":"getProductReferences","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Maximum size of returned results.","required":false,"schema":{"type":"integer","format":"int32","default":2147483647}},{"name":"productCode","in":"path","description":"Product identifier","required":true,"schema":{"type":"string"}},{"name":"referenceType","in":"query","description":"Comma-separated list of reference types according to enum ProductReferenceTypeEnum. If not specified, all types of product references will be used.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductReferenceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductReferenceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/suggestions":{"get":{"tags":["Products"],"summary":"Get a list of available suggestions","description":"Returns a list of all available suggestions related to a given term and limits the results to a specific value of the max parameter.","operationId":"getSuggestions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"max","in":"query","description":"Specifies the limit of results.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"term","in":"query","description":"Specified term","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SuggestionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/expressupdate":{"get":{"tags":["Products"],"summary":"Get products added to the express update feed.","description":"Returns products added to the express update feed. Returns only elements updated after the provided timestamp. The queue is cleared using a defined cronjob.","operationId":"getExpressUpdateProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalog","in":"query","description":"Only products from this catalog are returned. Format: catalogId:catalogVersion","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"timestamp","in":"query","description":"Only items newer than the given parameter are retrieved from the queue. This parameter should be in ISO-8601 format.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductExpressUpdateElementList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductExpressUpdateElementList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/paymentmodes":{"get":{"tags":["Payment Modes"],"summary":"Gets all available payment modes.","description":"Gets all payment modes defined for the base store.","operationId":"getPaymentModes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentModeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentModeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orders/{code}":{"get":{"tags":["Orders"],"summary":"Get a order.","description":"Returns details of a specific order based on the order GUID (Globally Unique Identifier) or the order CODE. The response contains detailed order information.","operationId":"getOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order GUID (Globally Unique Identifier) or order CODE","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/languages":{"get":{"tags":["Miscs"],"summary":"Get a list of available languages.","description":"Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned.","operationId":"getLanguages","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/LanguageList"}},"application/json":{"schema":{"$ref":"#/components/schemas/LanguageList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/feeds/orders/statusfeed":{"get":{"tags":["Feeds"],"summary":"Get a list of orders with status updates.","description":"Returns the orders that have changed status. Returns only the elements from the current baseSite that have been updated after the provided timestamp.","operationId":"getOrderStatusFeed","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"timestamp","in":"query","description":"Only items newer than the given parameter are retrieved. This parameter should be in ISO-8601 format (for example, 2018-01-09T16:28:45+0000).","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderStatusUpdateElementList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderStatusUpdateElementList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/export/products":{"get":{"tags":["Export"],"summary":"Get a list of product exports.","description":"Used for product export. Depending on the timestamp parameter, it can return all products or only products modified after the given time.","operationId":"getExportedProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalog","in":"query","description":"The catalog to retrieve products from. The catalog must be provided along with the version.","required":false,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"timestamp","in":"query","description":"When this parameter is set, only products modified after the given time will be returned. This parameter should be in ISO-8601 format (for example, 2018-01-09T16:28:45+0000).","required":false,"schema":{"type":"string"}},{"name":"version","in":"query","description":"The catalog version. The catalog version must be provided along with the catalog.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/deliverycountries":{"get":{"tags":["Miscs"],"summary":"Get a list of shipping countries.","description":"Lists all supported delivery countries for the current store. The list is sorted alphabetically.","operationId":"getDeliveryCountries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CountryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CountryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}":{"get":{"tags":["Customer Groups"],"summary":"Get a specific customer group.","description":"Returns a customer group with a specific groupId.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"getCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroup"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/currencies":{"get":{"tags":["Miscs"],"summary":"Get a list of available currencies.","description":"Lists all available currencies (all usable currencies for the current store). If the list of currencies for a base store is empty, a list of all currencies available in the system is returned.","operationId":"getCurrencies","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CurrencyList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CurrencyList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/countries":{"get":{"tags":["Countries"],"summary":"Get a list of countries.","description":"If the value of type equals to shipping, then return shipping countries. If the value of type equals to billing, then return billing countries. If the value of type is not given, return all countries. The list is sorted alphabetically.","operationId":"getCountries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"type","in":"query","description":"The type of countries.","required":false,"schema":{"type":"string","enum":["SHIPPING","BILLING"]}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CountryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CountryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/countries/{countyIsoCode}/regions":{"get":{"tags":["Countries"],"summary":"Fetch the list of regions for the provided country.","description":"Lists all regions.","operationId":"getCountryRegions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countyIsoCode","in":"path","description":"An ISO code for a country","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/RegionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/RegionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs":{"get":{"tags":["Catalogs"],"summary":"Get a list of catalogs","description":"Returns all catalogs with versions defined for the base store.","operationId":"getCatalogs","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CatalogList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CatalogList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}":{"get":{"tags":["Catalogs"],"summary":"Get a catalog","description":"Returns information about a catalog based on its ID, along with the versions defined for the current base store.","operationId":"getCatalog","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Catalog"}},"application/json":{"schema":{"$ref":"#/components/schemas/Catalog"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}":{"get":{"tags":["Catalogs"],"summary":"Get information about catalog version","description":"Returns information about the catalog version that exists for the current base store.","operationId":"getCatalogVersion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier","required":true,"schema":{"type":"string"}},{"name":"catalogVersionId","in":"path","description":"Catalog version identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CatalogVersion"}},"application/json":{"schema":{"$ref":"#/components/schemas/CatalogVersion"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}":{"get":{"tags":["Catalogs"],"summary":"Get information about catagory in a catalog version","description":"Returns information about a specified category that exists in a catalog version available for the current base store.","operationId":"getCategories","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier","required":true,"schema":{"type":"string"}},{"name":"catalogVersionId","in":"path","description":"Catalog version identifier","required":true,"schema":{"type":"string"}},{"name":"categoryId","in":"path","description":"Category identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CategoryHierarchy"}},"application/json":{"schema":{"$ref":"#/components/schemas/CategoryHierarchy"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cardtypes":{"get":{"tags":["Miscs"],"summary":"Get a list of supported payment card types.","description":"Lists supported payment card types.","operationId":"getCardTypes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CardTypeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CardTypeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/basestores/{baseStoreUid}":{"get":{"tags":["Base Stores"],"summary":"Get a base store.","description":"Returns details of a specific base store based on its identifier. The response contains detailed base store information.","operationId":"getBaseStore","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"baseStoreUid","in":"path","description":"Base store name","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/BaseStore"}},"application/json":{"schema":{"$ref":"#/components/schemas/BaseStore"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/basesites":{"get":{"tags":["Base Sites"],"summary":"Get all base sites.","description":"Get all base sites with corresponding base stores details in FULL mode.","operationId":"getBaseSites","parameters":[{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/BaseSiteList"}},"application/json":{"schema":{"$ref":"#/components/schemas/BaseSiteList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consents/{consentCode}":{"delete":{"tags":["Consents"],"summary":"Withdraw the user consent for a given consent code.","description":"If the user consent was given, the consent is withdrawn. If consent was already withdrawn then returns consent already withdrawn error. If there is no such consent then returns not found. If the current user is an anonymous user then returns access denied error.","operationId":"removeConsent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentCode","in":"path","description":"Consent code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/vouchers/{voucherId}":{"delete":{"tags":["Cart Promotions"],"summary":"Deletes a voucher defined for the current cart.","description":"Deletes a voucher based on the voucherId defined for the current cart.","operationId":"removeCartVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}},{"name":"voucherId","in":"path","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}/members/{userId}":{"delete":{"tags":["Customer Groups"],"summary":"Deletes a user from a customer group.","description":"Deletes user from a customer group.\n\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the ?customermanagergroup?.","operationId":"removeUsersFromCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}}},"components":{"schemas":{"ReturnRequestList":{"type":"object","properties":{"returnRequests":{"type":"array","description":"List of order return requests","items":{"$ref":"#/components/schemas/ReturnRequest"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of an Order Return Request List"},"Address":{"required":["firstName","lastName","line1","postalCode","titleCode","town"],"type":"object","properties":{"id":{"type":"string","description":"Unique id value of the address which is optional while creating new address. While performing other address operations this value is the key"},"title":{"type":"string","description":"Title of the address person"},"titleCode":{"type":"string","description":"Code of the title"},"firstName":{"type":"string","description":"First name of the address person"},"lastName":{"type":"string","description":"Last name of the address person"},"companyName":{"type":"string","description":"Company Name"},"line1":{"type":"string","description":"First line of the address"},"line2":{"type":"string","description":"Second line of the address"},"town":{"type":"string","description":"Town, field required"},"region":{"$ref":"#/components/schemas/Region"},"district":{"type":"string","description":"District name"},"postalCode":{"type":"string","description":"Postal code of the address"},"phone":{"type":"string","description":"Phone number"},"cellphone":{"type":"string","description":"Cellphone number"},"email":{"type":"string","description":"Email address"},"country":{"$ref":"#/components/schemas/Country"},"shippingAddress":{"type":"boolean","description":"Boolean flag if address is for shipping"},"defaultAddress":{"type":"boolean","description":"Boolean flag if address is default"},"visibleInAddressBook":{"type":"boolean","description":"Boolean flag if address is visible in the Address Book"},"formattedAddress":{"type":"string","description":"Boolean flag if address is formatted"}},"description":"Address object"},"OpeningSchedule":{"type":"object","properties":{"name":{"type":"string","description":"Name of the opening schedule"},"code":{"type":"string","description":"Code of the opening schedule"},"weekDayOpeningList":{"type":"array","description":"List of weekday opening days","items":{"$ref":"#/components/schemas/WeekdayOpeningDay"}},"specialDayOpeningList":{"type":"array","description":"List of special opening days","items":{"$ref":"#/components/schemas/SpecialOpeningDay"}}},"description":"Representation of an Opening schedule"},"CancellationRequestEntryInputList":{"required":["cancellationRequestEntryInputs"],"type":"object","properties":{"cancellationRequestEntryInputs":{"type":"array","description":"Cancellation request entry inputs which contain information about the order entries which are requested to be cancelled","items":{"$ref":"#/components/schemas/CancellationRequestEntryInput"}}},"description":"Cancellation request input list for the current order."},"ConsentTemplate":{"type":"object","properties":{"id":{"type":"string","description":"Consent template identifier"},"name":{"type":"string","description":"Consent template name"},"description":{"type":"string","description":"Consent template description"},"version":{"type":"integer","description":"Consent template version","format":"int32"},"currentConsent":{"$ref":"#/components/schemas/Consent"}},"description":"Representation of a Consent Template"},"Product":{"type":"object","properties":{"code":{"type":"string","description":"Code of the product"},"name":{"type":"string","description":"Name of the product"},"url":{"type":"string","description":"Url address of the product"},"description":{"type":"string","description":"Description of the product"},"purchasable":{"type":"boolean","description":"Flag defining if product is purchasable"},"stock":{"$ref":"#/components/schemas/Stock"},"futureStocks":{"type":"array","description":"List of future stocks","items":{"$ref":"#/components/schemas/FutureStock"}},"availableForPickup":{"type":"boolean","description":"Flag defining if product is available for pickup"},"averageRating":{"type":"number","description":"Rating number of average value","format":"double"},"numberOfReviews":{"type":"integer","description":"Number of reviews associated with the product","format":"int32"},"summary":{"type":"string","description":"Product summary"},"manufacturer":{"type":"string","description":"Data of product manufacturer"},"variantType":{"type":"string","description":"Variant type of the product"},"price":{"$ref":"#/components/schemas/Price"},"baseProduct":{"type":"string","description":"Information about base product"},"images":{"type":"array","description":"List of images linked to product","items":{"$ref":"#/components/schemas/Image"}},"categories":{"type":"array","description":"List of categories product belongs to","items":{"$ref":"#/components/schemas/Category"}},"reviews":{"type":"array","description":"List of reviews associated with the product","items":{"$ref":"#/components/schemas/Review"}},"classifications":{"type":"array","description":"List of classifications related to the product","items":{"$ref":"#/components/schemas/Classification"}},"potentialPromotions":{"type":"array","description":"List of potential promotions related to the product","items":{"$ref":"#/components/schemas/Promotion"}},"variantOptions":{"type":"array","description":"List of variant options related to the product","items":{"$ref":"#/components/schemas/VariantOption"}},"baseOptions":{"type":"array","description":"List of base options related to the product","items":{"$ref":"#/components/schemas/BaseOption"}},"volumePricesFlag":{"type":"boolean","description":"Flag stating if volume price should be displayed"},"volumePrices":{"type":"array","description":"List of volume prices","items":{"$ref":"#/components/schemas/Price"}},"productReferences":{"type":"array","description":"List of product references","items":{"$ref":"#/components/schemas/ProductReference"}},"variantMatrix":{"type":"array","description":"List of variant matrixes associated with the product","items":{"$ref":"#/components/schemas/VariantMatrixElement"}},"priceRange":{"$ref":"#/components/schemas/PriceRange"},"multidimensional":{"type":"boolean","description":"Flag stating if product is multidimensional"},"configuratorType":{"type":"string","description":"Configurator type related to the product"},"configurable":{"type":"boolean","description":"Flag stating if product is configurable"},"tags":{"uniqueItems":true,"type":"array","description":"Tags associated with the product","items":{"type":"string","description":"Tags associated with the product"}}},"description":"Representation of a Product"},"Image":{"type":"object","properties":{"imageType":{"type":"string","description":"Type of the image, can be PRIMARY or GALLERY","enum":["PRIMARY","GALLERY"]},"format":{"type":"string","description":"Format of the image, can be zoom, product, thumbnail, store, cartIcon, etc."},"url":{"type":"string","description":"URL address of the image"},"altText":{"type":"string","description":"Tooltip content which is visible while image mouse hovering"},"galleryIndex":{"type":"integer","description":"Index of the image while displayed in gallery","format":"int32"}},"description":"Representation of an Image"},"Feature":{"type":"object","properties":{"code":{"type":"string","description":"Code of the feature"},"name":{"type":"string","description":"Name of the feature"},"description":{"type":"string","description":"Description of the feature"},"type":{"type":"string","description":"Type of the feature"},"range":{"type":"boolean","description":"Range number of the feature"},"comparable":{"type":"boolean","description":"Flag defining it feature is comparable"},"featureUnit":{"$ref":"#/components/schemas/FeatureUnit"},"featureValues":{"type":"array","description":"List of feature values","items":{"$ref":"#/components/schemas/FeatureValue"}}},"description":"Representation of a Feature"},"PromotionResult":{"type":"object","properties":{"description":{"type":"string","description":"Description of promotion result"},"promotion":{"$ref":"#/components/schemas/Promotion"},"consumedEntries":{"type":"array","description":"List of promotion order entries consumed","items":{"$ref":"#/components/schemas/PromotionOrderEntryConsumed"}}},"description":"Representation of a Promotion result"},"UserGroup":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"},"members":{"type":"array","description":"List of members","items":{"$ref":"#/components/schemas/Principal"}},"subGroups":{"type":"array","description":"List of subgroups","items":{"$ref":"#/components/schemas/UserGroup"}},"membersCount":{"type":"integer","description":"Number of members","format":"int32"}},"description":"User group object with id and name."},"SpecialOpeningDay":{"type":"object","properties":{"openingTime":{"$ref":"#/components/schemas/Time"},"closingTime":{"$ref":"#/components/schemas/Time"},"date":{"type":"string","description":"Date of special opening day","format":"date-time"},"formattedDate":{"type":"string","description":"Text representation of the date of special opening day"},"closed":{"type":"boolean","description":"Flag stating if special opening day is closed"},"name":{"type":"string","description":"Name of the special opening day event"},"comment":{"type":"string","description":"Comment field"}},"description":"Representation of a special opening day"},"DeliveryOrderEntryGroup":{"type":"object","properties":{"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"quantity":{"type":"integer","description":"Quantity of order entries in a group","format":"int64"},"deliveryAddress":{"$ref":"#/components/schemas/Address"}},"description":"Representation of a Delivery Order Entry Group"},"Suggestion":{"type":"object","properties":{"value":{"type":"string","description":"Suggestion value"}},"description":"Representation of a Suggestion"},"BaseSiteList":{"type":"object","properties":{"baseSites":{"type":"array","description":"List of basesites","items":{"$ref":"#/components/schemas/BaseSite"}}},"description":"Representation of a Base Site List"},"ProductFutureStocks":{"type":"object","properties":{"productCode":{"type":"string","description":"Product identifier","example":"3318057"},"futureStocks":{"type":"array","description":"List of future stocks","items":{"$ref":"#/components/schemas/FutureStock"}}},"description":"Representation of a Product Future Stocks"},"UserSignUp":{"required":["firstName","lastName","password","uid"],"type":"object","properties":{"uid":{"type":"string","description":"user id, unique string required to create new user. It can be email"},"firstName":{"type":"string","description":"first name of the user"},"lastName":{"type":"string","description":"last name of the user"},"titleCode":{"type":"string"},"password":{"type":"string","description":"user password"}},"description":"User's object."},"Consent":{"type":"object","properties":{"code":{"type":"string","description":"Code of consent"},"consentGivenDate":{"type":"string","description":"Date of consenting","format":"date-time"},"consentWithdrawnDate":{"type":"string","description":"Consent withdrawn date","format":"date-time"}},"description":"Representation of a Consent"},"Currency":{"type":"object","properties":{"isocode":{"type":"string","description":"Code of the currency in iso format"},"name":{"type":"string","description":"Name of the currency"},"active":{"type":"boolean","description":"Boolean flag whether currency is active"},"symbol":{"type":"string","description":"Symbol of the currency"}},"description":"Representation of a Currency"},"Classification":{"type":"object","properties":{"code":{"type":"string","description":"Code of the classification"},"name":{"type":"string","description":"Name of the classification"},"features":{"type":"array","description":"List of features for given classification","items":{"$ref":"#/components/schemas/Feature"}}},"description":"Representation of a Classification"},"EntryGroup":{"type":"object","properties":{"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of child entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"entryGroupNumber":{"type":"integer","description":"Identifier of the entry group","format":"int32","example":1},"label":{"type":"string","description":"Label for the entry group","example":"Photo On The Go Package"},"erroneous":{"type":"boolean","description":"Indicates if the entry group is in an error state","example":true},"type":{"type":"string","description":"Indicates type of the group, possible values are STANDALONE, CONFIGURABLEBUNDLE or any customer implemented type for any new provider","example":"STANDALONE"}},"description":"Representation of an Entry Group"},"ReturnRequest":{"type":"object","properties":{"cancellable":{"type":"boolean","description":"Boolean flag for whether the return request is cancellable","example":true},"code":{"type":"string","description":"Return request code","example":"00000001"},"creationTime":{"type":"string","description":"Date of the return request creation","format":"date-time"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"order":{"$ref":"#/components/schemas/Order"},"refundDeliveryCost":{"type":"boolean","description":"Boolean flag for whether there is a delivery cost for refund","example":false},"returnEntries":{"type":"array","description":"Entries of the return request which contains information about the returned product","items":{"$ref":"#/components/schemas/ReturnRequestEntry"}},"returnLabelDownloadUrl":{"type":"string","description":"URL of the return label"},"rma":{"type":"string","description":"Return merchandise authorization number","example":"00000001"},"status":{"type":"string","description":"Status of return request"},"subTotal":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a return request for an order"},"VoucherList":{"type":"object","properties":{"vouchers":{"type":"array","description":"List of vouchers","items":{"$ref":"#/components/schemas/Voucher"}}},"description":"Representation of a Voucher List"},"ProductFutureStocksList":{"type":"object","properties":{"productFutureStocks":{"type":"array","description":"List of product future stocks","items":{"$ref":"#/components/schemas/ProductFutureStocks"}}},"description":"Representation of a Product Future Stocks List"},"LanguageList":{"type":"object","properties":{"languages":{"type":"array","description":"This is the list of Language fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Language"}}},"description":"Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned"},"PaymentRequest":{"type":"object","properties":{"postUrl":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}},"mappingLabels":{"type":"object","additionalProperties":{"type":"string"}}}},"SearchState":{"type":"object","properties":{"url":{"type":"string","description":"Url address of search state"},"query":{"$ref":"#/components/schemas/SearchQuery"}},"description":"Representation of a Search State"},"Country":{"type":"object","properties":{"isocode":{"type":"string","description":"Country code in iso format"},"name":{"type":"string","description":"Name of the country"}},"description":"Response body fields which will be returned while fetching the list of countries. The DTO is in XML or .json format"},"PaymentModeList":{"type":"object","properties":{"paymentModes":{"type":"array","description":"List of payment modes","items":{"$ref":"#/components/schemas/PaymentMode"}}},"description":"Representation of a Payment Mode List"},"Stock":{"type":"object","properties":{"stockLevelStatus":{"type":"string","description":"Status of stock level","example":"inStock"},"stockLevel":{"type":"integer","description":"Stock level expressed as number","format":"int64","example":25},"isValueRounded":{"type":"boolean","description":"Indicate whether Stock level value is rounded","example":false}},"description":"Representation of a Stock"},"PaymentMode":{"type":"object","properties":{"code":{"type":"string","description":"Payment mode code"},"name":{"type":"string","description":"Payment mode name"},"description":{"type":"string","description":"Payment mode description"}},"description":"Representation of a Payment Mode"},"VariantOption":{"type":"object","properties":{"code":{"type":"string","description":"Code of the variant option"},"stock":{"$ref":"#/components/schemas/Stock"},"url":{"type":"string","description":"Url address of the variant option"},"priceData":{"$ref":"#/components/schemas/Price"},"variantOptionQualifiers":{"type":"array","description":"List of variant option qualifiers","items":{"$ref":"#/components/schemas/VariantOptionQualifier"}}},"description":"Representation of a Variant Option"},"Consignment":{"type":"object","properties":{"code":{"type":"string","description":"Consignment code"},"trackingID":{"type":"string","description":"Consignment tracking identifier"},"status":{"type":"string","description":"Consignment status"},"statusDisplay":{"type":"string","description":"Consignment status display"},"statusDate":{"type":"string","description":"Consignment status date","format":"date-time"},"entries":{"type":"array","description":"List of consignment entries","items":{"$ref":"#/components/schemas/ConsignmentEntry"}},"shippingAddress":{"$ref":"#/components/schemas/Address"},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"orderCode":{"type":"string"},"shippingDate":{"type":"string","format":"date-time"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"warehouseCode":{"type":"string"},"packagingInfo":{"$ref":"#/components/schemas/PackagingInfo"}},"description":"Representation of a Consignment"},"Promotion":{"type":"object","properties":{"code":{"type":"string","description":"Code of the promotion"},"title":{"type":"string","description":"Promotion title"},"promotionType":{"type":"string","description":"Type of the promotion"},"startDate":{"type":"string","description":"The initial date of the promotion","format":"date-time"},"endDate":{"type":"string","description":"Last date of validity of the promotion","format":"date-time"},"description":{"type":"string","description":"Description of the promotion"},"couldFireMessages":{"type":"array","description":"Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description","items":{"type":"string","description":"Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description"}},"firedMessages":{"type":"array","description":"Message fired while the promotion is active. This is info how much you will get when applying the promotion","items":{"type":"string","description":"Message fired while the promotion is active. This is info how much you will get when applying the promotion"}},"productBanner":{"$ref":"#/components/schemas/Image"},"enabled":{"type":"boolean","description":"Boolean flag if promotion is enabled"},"priority":{"type":"integer","description":"Priority index as numeric value of the promotion. Higher number means higher priority","format":"int32"},"promotionGroup":{"type":"string","description":"Group of the promotion"},"restrictions":{"type":"array","description":"List of promotion restrictions","items":{"$ref":"#/components/schemas/PromotionRestriction"}}},"description":"Representation of a Promotion"},"PriceRange":{"type":"object","properties":{"maxPrice":{"$ref":"#/components/schemas/Price"},"minPrice":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Price Range"},"OrderStatusUpdateElement":{"type":"object","properties":{"code":{"type":"string","description":"Code of update element of order status"},"status":{"type":"string","description":"Status of update element"},"baseSiteId":{"type":"string","description":"BaseSite identifier"}},"description":"Representation of an Order Status Update Element"},"CardTypeList":{"type":"object","properties":{"cardTypes":{"type":"array","description":"List of card types","items":{"$ref":"#/components/schemas/CardType"}}},"description":"Representation of a Card Type List"},"UserGroupList":{"type":"object","properties":{"userGroups":{"type":"array","description":"List of user groups","items":{"$ref":"#/components/schemas/UserGroup"}},"totalNumber":{"type":"integer","description":"Total number","format":"int32"},"pageSize":{"type":"integer","description":"Page size","format":"int32"},"numberOfPages":{"type":"integer","description":"Number of pages","format":"int32"},"currentPage":{"type":"integer","description":"Current page","format":"int32"}},"description":"Representation of an User Group List"},"CountryList":{"type":"object","properties":{"countries":{"type":"array","description":"This is the list of Country fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Country"}}},"description":"List of countries"},"OrderEntryList":{"type":"object","properties":{"orderEntries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}}},"description":"Representation of an Order entry list consumed"},"FutureStock":{"type":"object","properties":{"stock":{"$ref":"#/components/schemas/Stock"},"date":{"type":"string","description":"Date of future stock","format":"date-time"},"formattedDate":{"type":"string","description":"Date of future stock expressed in text value","example":"31/12/2056"}},"description":"Representation of a Future Stock"},"Cart":{"type":"object","properties":{"code":{"type":"string","description":"Code number of order"},"net":{"type":"boolean","description":"Flag stating iv value is net-value"},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"totalTax":{"$ref":"#/components/schemas/Price"},"subTotal":{"$ref":"#/components/schemas/Price"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","format":"int32"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"deliveryAddress":{"$ref":"#/components/schemas/Address"},"paymentInfo":{"$ref":"#/components/schemas/PaymentDetails"},"appliedOrderPromotions":{"type":"array","description":"List of applied order promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"appliedProductPromotions":{"type":"array","description":"List of applied product promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"productDiscounts":{"$ref":"#/components/schemas/Price"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"totalDiscounts":{"$ref":"#/components/schemas/Price"},"site":{"type":"string","description":"Site"},"store":{"type":"string","description":"Store"},"guid":{"type":"string","description":"Guest user id identifier"},"calculated":{"type":"boolean","description":"Flag showing if order is calculated"},"appliedVouchers":{"type":"array","description":"List of applied vouchers","items":{"$ref":"#/components/schemas/Voucher"}},"user":{"$ref":"#/components/schemas/Principal"},"pickupOrderGroups":{"type":"array","description":"List of pickup order entry group","items":{"$ref":"#/components/schemas/PickupOrderEntryGroup"}},"deliveryOrderGroups":{"type":"array","description":"List of delivery order entries group","items":{"$ref":"#/components/schemas/DeliveryOrderEntryGroup"}},"pickupItemsQuantity":{"type":"integer","description":"Quantity of pickup items","format":"int64"},"deliveryItemsQuantity":{"type":"integer","description":"Quantity of delivery items","format":"int64"},"totalUnitCount":{"type":"integer","description":"Total unit count","format":"int32"},"potentialOrderPromotions":{"type":"array","description":"List of potential order promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"potentialProductPromotions":{"type":"array","description":"List of potential product promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"name":{"type":"string","description":"Name of the cart"},"description":{"type":"string","description":"Description of the cart"},"expirationTime":{"type":"string","description":"Date of cart expiration time","format":"date-time"},"saveTime":{"type":"string","description":"Date of saving cart","format":"date-time"},"savedBy":{"$ref":"#/components/schemas/Principal"}},"description":"Representation of a Cart"},"SearchQuery":{"type":"object","properties":{"value":{"type":"string","description":"Value of search query"}},"description":"Representation of a Search Query"},"PromotionResultList":{"type":"object","properties":{"promotions":{"type":"array","description":"List of promotion results","items":{"$ref":"#/components/schemas/PromotionResult"}}},"description":"Representation of a Promotion result list"},"VariantOptionQualifier":{"type":"object","properties":{"qualifier":{"type":"string","description":"Qualifier"},"name":{"type":"string","description":"Name of variant option qualifier"},"value":{"type":"string","description":"Value of variant option qualifier"},"image":{"$ref":"#/components/schemas/Image"}},"description":"Representation of a Variant Option Qualifier"},"AddressValidation":{"type":"object","properties":{"errors":{"$ref":"#/components/schemas/errorList"},"decision":{"type":"string","description":"Decision"},"suggestedAddresses":{"type":"array","description":"List of suggested addresses","items":{"$ref":"#/components/schemas/Address"}}},"description":"Representation of an Address Validation"},"PromotionRestriction":{"type":"object","properties":{"restrictionType":{"type":"string","description":"Type of the promotion restriction"},"description":{"type":"string","description":"Description of the promotion restriction"}},"description":"Representation of a Promotion Restriction"},"errorList":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/error"}}},"description":"List of errors"},"ConsentTemplateList":{"type":"object","properties":{"consentTemplates":{"type":"array","description":"List of consent templates","items":{"$ref":"#/components/schemas/ConsentTemplate"}}},"description":"Representation of a Consent Template List"},"CatalogList":{"type":"object","properties":{"catalogs":{"type":"array","description":"List of catalog items","items":{"$ref":"#/components/schemas/Catalog"}}},"description":"Representation of a Catalog List"},"PackagingInfo":{"type":"object","properties":{"width":{"type":"string"},"height":{"type":"string"},"length":{"type":"string"},"grossWeight":{"type":"string"},"insuredValue":{"type":"string"},"dimensionUnit":{"type":"string"},"weightUnit":{"type":"string"}},"description":"Representation of a Packaging Information"},"FeatureValue":{"type":"object","properties":{"value":{"type":"string","description":"Value of the feature"}},"description":"Representation of a Feature Value"},"ConfigurationInfo":{"type":"object","properties":{"configuratorType":{"type":"string","description":"Type of configuration info"},"status":{"type":"string","description":"Status of configuration info"},"configurationLabel":{"type":"string","description":"Label of configuration info"},"configurationValue":{"type":"string","description":"Value of configuration info"}},"description":"Representation of a Configuration Info"},"ProductList":{"type":"object","properties":{"products":{"type":"array","description":"List of products","items":{"$ref":"#/components/schemas/Product"}},"catalog":{"type":"string","description":"Catalog of product list"},"version":{"type":"string","description":"Version of product list"},"totalProductCount":{"type":"integer","description":"Total product count","format":"int32"},"totalPageCount":{"type":"integer","description":"Total page count","format":"int32"},"currentPage":{"type":"integer","description":"Number of current page","format":"int32"}},"description":"Representation of a Product List"},"StoreFinderSearchPage":{"type":"object","properties":{"stores":{"type":"array","description":"List of stores","items":{"$ref":"#/components/schemas/PointOfService"}},"sorts":{"type":"array","description":"List of sortings","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"locationText":{"type":"string","description":"Location text"},"sourceLatitude":{"type":"number","description":"Source latitude","format":"double"},"sourceLongitude":{"type":"number","description":"Source longitude","format":"double"},"boundNorthLatitude":{"type":"number","description":"Bound north latitude","format":"double"},"boundEastLongitude":{"type":"number","description":"Bound east longitude","format":"double"},"boundSouthLatitude":{"type":"number","description":"Bound south latitude","format":"double"},"boundWestLongitude":{"type":"number","description":"Bound west longitude","format":"double"}},"description":"Representation of a Store finder search page"},"Principal":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"}},"description":"Representation of a Principal webservice DTO used for defining User data types"},"CartModificationList":{"type":"object","properties":{"cartModifications":{"type":"array","description":"List of cart modifications","items":{"$ref":"#/components/schemas/CartModification"}}},"description":"Representation of a Cart modification list"},"FeatureUnit":{"type":"object","properties":{"symbol":{"type":"string","description":"Symbol of the feature unit"},"name":{"type":"string","description":"Name of the feature unit"},"unitType":{"type":"string","description":"Type of the feature unit"}},"description":"Representation of a Feature Unit"},"VariantCategory":{"type":"object","properties":{"name":{"type":"string","description":"Variant category name"},"hasImage":{"type":"boolean","description":"Flag if varian category has image assigned"},"priority":{"type":"integer","description":"Priority number of variant category","format":"int32"}},"description":"Representation of a Variant Category"},"PointOfServiceList":{"type":"object","properties":{"pointOfServices":{"type":"array","description":"List of points of service","items":{"$ref":"#/components/schemas/PointOfService"}}},"description":"Representation of a Point of Service List"},"ProductExpressUpdateElementList":{"type":"object","properties":{"productExpressUpdateElements":{"type":"array","description":"List of product express update element","items":{"$ref":"#/components/schemas/ProductExpressUpdateElement"}}},"description":"Representation of a Product Express Update Element List"},"CartModification":{"type":"object","properties":{"statusCode":{"type":"string","description":"Status code of cart modification"},"quantityAdded":{"type":"integer","description":"Quantity added with cart modification","format":"int64"},"quantity":{"type":"integer","description":"Final quantity after cart modification","format":"int64"},"entry":{"$ref":"#/components/schemas/OrderEntry"},"deliveryModeChanged":{"type":"boolean","description":"Delivery mode changed"},"statusMessage":{"type":"string","description":"Status message"}},"description":"Representation of a Cart modification"},"PromotionOrderEntryConsumed":{"type":"object","properties":{"code":{"type":"string","description":"Order entry code"},"adjustedUnitPrice":{"type":"number","description":"Adjusted unit price for promotion order entry","format":"double"},"orderEntryNumber":{"type":"integer","description":"Order entry number","format":"int32"},"quantity":{"type":"integer","description":"Quantity of promotion order entry","format":"int64"}},"description":"Representation of a Promotion order entry consumed"},"GeoPoint":{"type":"object","properties":{"latitude":{"type":"number","description":"Geopoint latitude","format":"double"},"longitude":{"type":"number","description":"Geopoint longitude","format":"double"}},"description":"Representation of a GeoPoint"},"OrderEntry":{"type":"object","properties":{"entryNumber":{"type":"integer","description":"Entry number of the order entry","format":"int32"},"quantity":{"type":"integer","description":"Quantity number of items in order entry","format":"int64"},"basePrice":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"product":{"$ref":"#/components/schemas/Product"},"updateable":{"type":"boolean","description":"Flag defining if order entry item is updateable"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"configurationInfos":{"type":"array","description":"Configuration info of order entry","items":{"$ref":"#/components/schemas/ConfigurationInfo"}},"statusSummaryList":{"type":"array","description":"List of aggregated status information per entry, relevant if the entry is configurable and its configuration contains one or many issues in different severities. Note that configurators typically raise such issues only in case the parent document is changeable. In this case the issues (depending on their severity) need to be fixed before a checkout can be done. This means this segment can be present for a cart entry, for order entries it will always be empty","items":{"$ref":"#/components/schemas/StatusSummary"}},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"cancelledItemsPrice":{"$ref":"#/components/schemas/Price"},"cancellableQuantity":{"type":"integer","description":"Quantity number of cancellable items in order entry","format":"int64","example":5},"returnedItemsPrice":{"$ref":"#/components/schemas/Price"},"returnableQuantity":{"type":"integer","description":"Quantity number of returnable items in order entry","format":"int64","example":5},"url":{"type":"string"},"quantityAllocated":{"type":"integer","format":"int64"},"quantityUnallocated":{"type":"integer","format":"int64"},"quantityCancelled":{"type":"integer","format":"int64"},"quantityPending":{"type":"integer","format":"int64"},"quantityShipped":{"type":"integer","format":"int64"},"quantityReturned":{"type":"integer","format":"int64"}},"description":"Request body parameter that contains details such as the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name)\n\nThe DTO is in XML or .json format."},"StoreCountList":{"type":"object","properties":{"countriesAndRegionsStoreCount":{"type":"array","description":"List of store counts","items":{"$ref":"#/components/schemas/StoreCount"}}},"description":"Representation of a Store Count List"},"PointOfService":{"type":"object","properties":{"name":{"type":"string","description":"Name of the point of service","example":"Misato"},"displayName":{"type":"string","description":"Display name of the point of service"},"url":{"type":"string","description":"Url address of the point of service"},"description":{"type":"string","description":"Description of the point of service"},"openingHours":{"$ref":"#/components/schemas/OpeningSchedule"},"storeContent":{"type":"string","description":"Store content of given point of service"},"features":{"type":"object","additionalProperties":{"type":"string","description":"List of features for a given point of service"},"description":"List of features for a given point of service"},"geoPoint":{"$ref":"#/components/schemas/GeoPoint"},"formattedDistance":{"type":"string","description":"Distance to the point of service as text value"},"distanceKm":{"type":"number","description":"Distance to the point of service as number value","format":"double"},"mapIcon":{"$ref":"#/components/schemas/Image"},"address":{"$ref":"#/components/schemas/Address"},"storeImages":{"type":"array","description":"Collection of images associated with a point of service","items":{"$ref":"#/components/schemas/Image"}},"pickUpInStoreInstructions":{"type":"string","description":"Instructions used for picking up an order in store"},"warehouseCodes":{"type":"array","items":{"type":"string"}}},"description":"Representation of a Point of service"},"Sort":{"type":"object","properties":{"code":{"type":"string","description":"Code of Sort"},"name":{"type":"string","description":"Name of Sort"},"selected":{"type":"boolean","description":"Flag stating when Sort is selected"}},"description":"Representation a Sort option"},"OrderHistory":{"type":"object","properties":{"code":{"type":"string","description":"Code of Order History"},"status":{"type":"string","description":"Status of Order History"},"statusDisplay":{"type":"string","description":"Status display"},"placed":{"type":"string","description":"Date of placing order","format":"date-time"},"guid":{"type":"string","description":"Guest user identifier"},"total":{"$ref":"#/components/schemas/Price"}},"description":"Representation of an Order History"},"Facet":{"type":"object","properties":{"name":{"type":"string","description":"Name of the facet"},"priority":{"type":"integer","description":"Priority value of the facet","format":"int32"},"category":{"type":"boolean","description":"Flag stating if facet is category facet"},"multiSelect":{"type":"boolean","description":"Flag stating if facet is multiSelect"},"visible":{"type":"boolean","description":"Flag stating if facet is visible"},"topValues":{"type":"array","description":"List of top facet values","items":{"$ref":"#/components/schemas/FacetValue"}},"values":{"type":"array","description":"List of all facet values","items":{"$ref":"#/components/schemas/FacetValue"}}},"description":"Representation of a Facet"},"Order":{"type":"object","properties":{"code":{"type":"string","description":"Code number of order"},"net":{"type":"boolean","description":"Flag stating iv value is net-value"},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"totalTax":{"$ref":"#/components/schemas/Price"},"subTotal":{"$ref":"#/components/schemas/Price"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","format":"int32"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"deliveryAddress":{"$ref":"#/components/schemas/Address"},"paymentInfo":{"$ref":"#/components/schemas/PaymentDetails"},"appliedOrderPromotions":{"type":"array","description":"List of applied order promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"appliedProductPromotions":{"type":"array","description":"List of applied product promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"productDiscounts":{"$ref":"#/components/schemas/Price"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"totalDiscounts":{"$ref":"#/components/schemas/Price"},"site":{"type":"string","description":"Site"},"store":{"type":"string","description":"Store"},"guid":{"type":"string","description":"Guest user id identifier"},"calculated":{"type":"boolean","description":"Flag showing if order is calculated"},"appliedVouchers":{"type":"array","description":"List of applied vouchers","items":{"$ref":"#/components/schemas/Voucher"}},"user":{"$ref":"#/components/schemas/Principal"},"pickupOrderGroups":{"type":"array","description":"List of pickup order entry group","items":{"$ref":"#/components/schemas/PickupOrderEntryGroup"}},"deliveryOrderGroups":{"type":"array","description":"List of delivery order entries group","items":{"$ref":"#/components/schemas/DeliveryOrderEntryGroup"}},"pickupItemsQuantity":{"type":"integer","description":"Quantity of pickup items","format":"int64"},"deliveryItemsQuantity":{"type":"integer","description":"Quantity of delivery items","format":"int64"},"created":{"type":"string","description":"Date of order creation","format":"date-time"},"status":{"type":"string","description":"Status of order"},"statusDisplay":{"type":"string","description":"Status display"},"guestCustomer":{"type":"boolean","description":"Flag showing if customer is Guest customer"},"consignments":{"type":"array","description":"List of consignment","items":{"$ref":"#/components/schemas/Consignment"}},"deliveryStatus":{"type":"string","description":"Order delivery status"},"deliveryStatusDisplay":{"type":"string","description":"Order delivery status display"},"unconsignedEntries":{"type":"array","description":"List of unconsigned order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"cancellable":{"type":"boolean","description":"Boolean flag showing if order is cancellable","example":true},"returnable":{"type":"boolean","description":"Boolean flag showing if order is returnable","example":true},"paymentAddress":{"$ref":"#/components/schemas/Address"}},"description":"Representation of an Order"},"MemberList":{"type":"object","properties":{"members":{"type":"array","description":"List of member","items":{"$ref":"#/components/schemas/Principal"}}},"description":"List of users to assign to customer group."},"WeekdayOpeningDay":{"type":"object","properties":{"openingTime":{"$ref":"#/components/schemas/Time"},"closingTime":{"$ref":"#/components/schemas/Time"},"weekDay":{"type":"string","description":"Text representation of week day opening day"},"closed":{"type":"boolean","description":"Flag stating if weekday opening day is closed"}},"description":"Representation of a Weekday Opening Day"},"ReturnRequestEntry":{"type":"object","properties":{"orderEntry":{"$ref":"#/components/schemas/OrderEntry"},"expectedQuantity":{"type":"integer","description":"Quantity which is expected to be returned for this return request entry","format":"int64","example":5},"refundAmount":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a return request entry which contains information about the returned product"},"Catalog":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"catalogVersions":{"type":"array","description":"List of versions of catalog","items":{"$ref":"#/components/schemas/CatalogVersion"}}},"description":"Representation of an Catalog"},"PickupOrderEntryGroup":{"type":"object","properties":{"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"quantity":{"type":"integer","description":"Quantity of order entries in a group","format":"int64"},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"distance":{"type":"number","description":"Distance calculated to pickup place","format":"double"}},"description":"Representation of a Pickup Order Entry Group"},"ConsignmentEntry":{"type":"object","properties":{"orderEntry":{"$ref":"#/components/schemas/OrderEntry"},"quantity":{"type":"integer","description":"Quantity value of Consignment entry","format":"int64"},"shippedQuantity":{"type":"integer","description":"Shipped quantity","format":"int64"},"quantityDeclined":{"type":"integer","format":"int64"},"quantityPending":{"type":"integer","format":"int64"},"quantityShipped":{"type":"integer","format":"int64"}},"description":"Representation of a Consignment Entry"},"ProductExpressUpdateElement":{"type":"object","properties":{"code":{"type":"string","description":"Code of product express update element"},"catalogId":{"type":"string","description":"Catalog identifier"},"catalogVersion":{"type":"string","description":"Catalog version"}},"description":"Representation of a Product Express Update Element"},"Price":{"type":"object","properties":{"currencyIso":{"type":"string","description":"Currency iso format"},"value":{"type":"number","description":"Value of price in BigDecimal format"},"priceType":{"type":"string","description":"Type of the price","enum":["BUY","FROM"]},"formattedValue":{"type":"string","description":"Value of price formatted"},"minQuantity":{"type":"integer","description":"Minimum quantity of the price value","format":"int64"},"maxQuantity":{"type":"integer","description":"Maximum quantity of the price value","format":"int64"}},"description":"Representation of a Price"},"StoreFinderStockSearchPage":{"type":"object","properties":{"stores":{"type":"array","description":"List of stores","items":{"$ref":"#/components/schemas/PointOfServiceStock"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"locationText":{"type":"string","description":"Location text"},"sourceLatitude":{"type":"number","description":"Source latitude","format":"double"},"sourceLongitude":{"type":"number","description":"Source longitude","format":"double"},"boundNorthLatitude":{"type":"number","description":"Bound to north latitude","format":"double"},"boundEastLongitude":{"type":"number","description":"Bound to east longitude","format":"double"},"boundSouthLatitude":{"type":"number","description":"Bound to south latitude","format":"double"},"boundWestLongitude":{"type":"number","description":"Bound to west longitude","format":"double"},"product":{"$ref":"#/components/schemas/Product"}},"description":"Representation of a Store Finder Stock Search Page"},"Region":{"type":"object","properties":{"isocode":{"type":"string","description":"Country and Region code in iso format"},"isocodeShort":{"type":"string","description":"Region code in short iso form"},"countryIso":{"type":"string","description":"Country code in iso format"},"name":{"type":"string","description":"Name of the region"}},"description":"Response body fields which will be returned while fetching the list of country's regions."},"DeliveryMode":{"type":"object","properties":{"code":{"type":"string","description":"Code of the delivery mode"},"name":{"type":"string","description":"Name of the delivery mode"},"description":{"type":"string","description":"Description of the delivery mode"},"deliveryCost":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Delivery mode"},"PaymentDetails":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of payment detail"},"accountHolderName":{"type":"string","description":"Name of account holder"},"cardType":{"$ref":"#/components/schemas/CardType"},"cardNumber":{"type":"string","description":"Payment card number"},"startMonth":{"type":"string","description":"Start month from which payment is valid"},"startYear":{"type":"string","description":"Start year from which payment is valid"},"expiryMonth":{"type":"string","description":"Month of expiration of payment"},"expiryYear":{"type":"string","description":"Year of expiration of payment"},"issueNumber":{"type":"string","description":"Issue number"},"subscriptionId":{"type":"string","description":"Identifier of subscription"},"saved":{"type":"boolean","description":"Flag to mark if payment is saved one"},"defaultPayment":{"type":"boolean","description":"Flag to mark if payment the default one"},"billingAddress":{"$ref":"#/components/schemas/Address"}},"description":"Payment details object"},"DeliveryModeList":{"type":"object","properties":{"deliveryModes":{"type":"array","description":"List of delivery modes","items":{"$ref":"#/components/schemas/DeliveryMode"}}},"description":"Representation of a Delivery mode list"},"ResetPassword":{"required":["newPassword","token"],"type":"object","properties":{"token":{"type":"string","description":"token value which will be generated as unique string that will be sent with email to allow user for completing reset-password operation"},"newPassword":{"type":"string","description":"new password string which is required to complete process of resetting password"}},"description":"Request body parameter that contains details such as token and new password"},"CategoryHierarchy":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"subcategories":{"type":"array","description":"List of subcategory hierarchies","items":{"$ref":"#/components/schemas/CategoryHierarchy"}}},"description":"Representation of a Category Hierarchy"},"User":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"},"defaultAddress":{"$ref":"#/components/schemas/Address"},"titleCode":{"type":"string","description":"User title code"},"title":{"type":"string","description":"User title"},"firstName":{"type":"string","description":"User first name"},"lastName":{"type":"string","description":"User last name"},"currency":{"$ref":"#/components/schemas/Currency"},"language":{"$ref":"#/components/schemas/Language"},"displayUid":{"type":"string","description":"User identifier"},"customerId":{"type":"string","description":"Customer identifier"},"deactivationDate":{"type":"string","description":"Deactivation date","format":"date-time"},"defaultPointOfServiceName":{"type":"string","description":"Name of the default pick up location","example":"Misato"}},"description":"User's object."},"Category":{"type":"object","properties":{"code":{"type":"string","description":"Code of the category"},"name":{"type":"string","description":"Name of the category"},"url":{"type":"string","description":"URL of the category"},"image":{"$ref":"#/components/schemas/Image"}},"description":"Representation of a Category"},"CartList":{"type":"object","properties":{"carts":{"type":"array","description":"List of carts","items":{"$ref":"#/components/schemas/Cart"}}},"description":"Representation of a Cart list"},"SaveCartResult":{"type":"object","properties":{"savedCartData":{"$ref":"#/components/schemas/Cart"}},"description":"Representation of a Save Cart Result"},"CancellationRequestEntryInput":{"required":["orderEntryNumber","quantity"],"type":"object","properties":{"orderEntryNumber":{"type":"integer","description":"Order entry number of the cancelled product","format":"int32","example":1},"quantity":{"type":"integer","description":"Quantity of the product which belongs to the order entry and is requested to be cancelled","format":"int64","example":5}},"description":"Representation of a cancellation request entry input for an order"},"Time":{"type":"object","properties":{"hour":{"type":"string","description":"Hour part of the time data","format":"byte"},"minute":{"type":"string","description":"Minute part of the time data","format":"byte"},"formattedHour":{"type":"string","description":"Formatted hour"}},"description":"Representation of a Time"},"Review":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of review"},"headline":{"type":"string","description":"Review headline"},"comment":{"type":"string","description":"Review comment"},"rating":{"type":"number","description":"Review rating value","format":"double"},"date":{"type":"string","description":"Date of the review","format":"date-time"},"alias":{"type":"string","description":"Alias name for the review"},"principal":{"$ref":"#/components/schemas/User"}},"description":"Object contains review details like : rating, alias, headline, comment"},"OrderStatusUpdateElementList":{"type":"object","properties":{"orderStatusUpdateElements":{"type":"array","description":"List of order status update elements","items":{"$ref":"#/components/schemas/OrderStatusUpdateElement"}}},"description":"Representation of an Order Status Update Element List"},"error":{"type":"object","properties":{"type":{"type":"string","description":"Type of the error e.g. 'LowStockError'."},"reason":{"type":"string","description":"Additional classification specific for each error type e.g. 'noStock'."},"message":{"type":"string","description":"Descriptive, human readable error message."},"subjectType":{"type":"string","description":"Type of the object related to the error e.g. 'entry'."},"subject":{"type":"string","description":"Identifier of the related object e.g. '1'."},"errorCode":{"type":"string","description":"Error code"},"language":{"type":"string","example":"English"},"position":{"type":"integer","format":"int32","example":1},"exceptionMessage":{"type":"string"}},"description":"Error message"},"ReturnRequestEntryInput":{"required":["orderEntryNumber","quantity"],"type":"object","properties":{"orderEntryNumber":{"type":"integer","description":"Order entry number of the returned product","format":"int32","example":1},"quantity":{"type":"integer","description":"Quantity of the product which belongs to the order entry and is requested to be returned","format":"int64","example":5}},"description":"Representation of a return request entry input for an order"},"OrderHistoryList":{"type":"object","properties":{"orders":{"type":"array","description":"List of order history items","items":{"$ref":"#/components/schemas/OrderHistory"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of an Order History List"},"BaseOption":{"type":"object","properties":{"variantType":{"type":"string","description":"Variant type of base option"},"options":{"type":"array","description":"List of all variant options","items":{"$ref":"#/components/schemas/VariantOption"}},"selected":{"$ref":"#/components/schemas/VariantOption"}},"description":"Representation of a Base Option"},"FacetValue":{"type":"object","properties":{"name":{"type":"string","description":"Name of the facet value"},"count":{"type":"integer","description":"Count of the facet value","format":"int64"},"query":{"$ref":"#/components/schemas/SearchState"},"selected":{"type":"boolean","description":"Flag stating if facet value is selected"}},"description":"Representation of a Facet Value"},"Language":{"type":"object","properties":{"isocode":{"type":"string","description":"iso code of the language"},"name":{"type":"string","description":"name of the language"},"nativeName":{"type":"string","description":"name the language in native form"},"active":{"type":"boolean","description":"true/false indicator when the language is active"}},"description":"Representation of a Language"},"CardType":{"type":"object","properties":{"code":{"type":"string","description":"Card type code"},"name":{"type":"string","description":"Card type name"}},"description":"Representation of a Card Type"},"TitleList":{"type":"object","properties":{"titles":{"type":"array","description":"List of titles","items":{"$ref":"#/components/schemas/Title"}}},"description":"Representation of a Title List"},"CatalogVersion":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"categories":{"type":"array","description":"List of category hierarchies","items":{"$ref":"#/components/schemas/CategoryHierarchy"}}},"description":"Representation of a Catalog Version"},"AddressList":{"type":"object","properties":{"addresses":{"type":"array","description":"List of addresses","items":{"$ref":"#/components/schemas/Address"}}},"description":"Representation of an Address list"},"CurrencyList":{"type":"object","properties":{"currencies":{"type":"array","description":"List of currencies","items":{"$ref":"#/components/schemas/Currency"}}},"description":"Representation of a Currency List"},"ProductReferenceList":{"type":"object","properties":{"references":{"type":"array","description":"List of product references","items":{"$ref":"#/components/schemas/ProductReference"}}},"description":"Representation of a Product Reference List"},"StatusSummary":{"type":"object","properties":{"status":{"type":"string","description":"Status or severity indicator, can be one of ERROR, WARNING, INFO or SUCCESS","example":"ERROR"},"numberOfIssues":{"type":"integer","description":"Number of issues per status","format":"int32","example":3}},"description":"Representation of a status summary, an aggregated view on issues for a specific status or severity. These issues are attached to configurations of products or order entries"},"deprecatedPagination":{"type":"object","properties":{"pageSize":{"type":"integer","description":"The number of results per page. A page may have less results if there are less than a full page of results, only on the last page in the results","format":"int32"},"currentPage":{"type":"integer","description":"The current page number. The first page is number zero (0), the second page is number one (1), and so on","format":"int32"},"sort":{"type":"string","description":"The selected sort code"},"totalPages":{"type":"integer","description":"The total number of pages. This is the number of pages, each of pageSize, required to display the totalResults.","format":"int32"},"totalResults":{"type":"integer","description":"The total number of matched results across all pages","format":"int64"}},"description":"Representation of a search results pagination"},"ProductReference":{"type":"object","properties":{"referenceType":{"type":"string","description":"Reference type"},"description":{"type":"string","description":"Reference description"},"quantity":{"type":"integer","description":"Reference quantity","format":"int32"},"target":{"$ref":"#/components/schemas/Product"},"preselected":{"type":"boolean","description":"Flag stating if product reference is preselected"}},"description":"Representation of a Product Reference"},"BaseSite":{"type":"object","properties":{"uid":{"type":"string","description":"Unique identifier of Basesite"},"name":{"type":"string","description":"Name of Basesite"},"stores":{"type":"array","description":"List of Basestores","items":{"$ref":"#/components/schemas/BaseStore"}},"theme":{"type":"string","description":"Theme of Basesite"},"defaultLanguage":{"$ref":"#/components/schemas/Language"},"locale":{"type":"string","description":"Locale data for Basesite"},"channel":{"type":"string","description":"Channel"},"urlEncodingAttributes":{"type":"array","description":"List of url encoding attributes","items":{"type":"string","description":"List of url encoding attributes"}},"urlPatterns":{"type":"array","description":"List of url patterns","items":{"type":"string","description":"List of url patterns"}},"defaultPreviewCatalogId":{"type":"string","description":"Default preview catalog id"},"defaultPreviewCategoryCode":{"type":"string","description":"Default preview category code"},"defaultPreviewProductCode":{"type":"string","description":"Default preview product code"},"isolated":{"type":"boolean","description":"Indicates whether customer data isolation is enabled for this site. If true, customer can get site information after registration, For example registerd username is name@sap.com, returned uid will be name@sap.com|baseSiteUid"},"captchaConfig":{"$ref":"#/components/schemas/CaptchaConfig"}},"description":"Representation of a Base Site"},"SpellingSuggestion":{"type":"object","properties":{"suggestion":{"type":"string","description":"Spelling suggestion"},"query":{"type":"string","description":"Query for spelling suggestion"}},"description":"Representation of a Spell Checker Suggestion"},"PaymentDetailsList":{"type":"object","properties":{"payments":{"type":"array","description":"List of payment details","items":{"$ref":"#/components/schemas/PaymentDetails"}}},"description":"Representation of a Payment details list"},"Title":{"type":"object","properties":{"code":{"type":"string","description":"Title code"},"name":{"type":"string","description":"Title name"}},"description":"Representation of a Title"},"Breadcrumb":{"type":"object","properties":{"facetCode":{"type":"string","description":"Code of the facet"},"facetName":{"type":"string","description":"Name of the facet"},"facetValueCode":{"type":"string","description":"Value code of the facet"},"facetValueName":{"type":"string","description":"Value name of the facet"},"removeQuery":{"$ref":"#/components/schemas/SearchState"},"truncateQuery":{"$ref":"#/components/schemas/SearchState"}},"description":"Representation of a Breadcrumb"},"PointOfServiceStock":{"type":"object","properties":{"name":{"type":"string","description":"Name of the point of service","example":"Misato"},"displayName":{"type":"string","description":"Display name of the point of service"},"url":{"type":"string","description":"Url address of the point of service"},"description":{"type":"string","description":"Description of the point of service"},"openingHours":{"$ref":"#/components/schemas/OpeningSchedule"},"storeContent":{"type":"string","description":"Store content of given point of service"},"features":{"type":"object","additionalProperties":{"type":"string","description":"List of features for a given point of service"},"description":"List of features for a given point of service"},"geoPoint":{"$ref":"#/components/schemas/GeoPoint"},"formattedDistance":{"type":"string","description":"Distance to the point of service as text value"},"distanceKm":{"type":"number","description":"Distance to the point of service as number value","format":"double"},"mapIcon":{"$ref":"#/components/schemas/Image"},"address":{"$ref":"#/components/schemas/Address"},"storeImages":{"type":"array","description":"Collection of images associated with a point of service","items":{"$ref":"#/components/schemas/Image"}},"pickUpInStoreInstructions":{"type":"string","description":"Instructions used for picking up an order in store"},"warehouseCodes":{"type":"array","items":{"type":"string"}},"stockInfo":{"$ref":"#/components/schemas/Stock"}},"description":"Representation of a Point Of Service Stock"},"ReturnRequestEntryInputList":{"required":["orderCode","returnRequestEntryInputs"],"type":"object","properties":{"orderCode":{"type":"string","description":"Code of the order which return request is related to","example":"00000001"},"returnRequestEntryInputs":{"type":"array","description":"Return request entry inputs which contain information about the order entries which are requested to be returned","items":{"$ref":"#/components/schemas/ReturnRequestEntryInput"}}},"description":"Return request input list for the current order."},"Voucher":{"type":"object","properties":{"code":{"type":"string","description":"The identifier of the Voucher. This is the first part of voucher code which holds first 3 letters, like: 123"},"voucherCode":{"type":"string","description":"Voucher code, is the holder for keeping specific occasional voucher related to business usage. It can be generated and looks like: 123-H8BC-Y3D5-34AL"},"name":{"type":"string","description":"Name of the voucher"},"description":{"type":"string","description":"Description of the voucher"},"value":{"type":"number","description":"Value of the voucher. Example of such value is: 15.0d","format":"double"},"valueFormatted":{"type":"string","description":"Formatted value of the voucher"},"valueString":{"type":"string","description":"The value of the voucher to display. Example: 15.0%"},"freeShipping":{"type":"boolean","description":"Specifies if the order this voucher is applied to is shipped for free (true) or not (false). Defaults to false."},"currency":{"$ref":"#/components/schemas/Currency"},"appliedValue":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Voucher"},"SuggestionList":{"type":"object","properties":{"suggestions":{"type":"array","description":"List of suggestions","items":{"$ref":"#/components/schemas/Suggestion"}}},"description":"Representation of a Suggestion List"},"ReturnRequestModification":{"type":"object","properties":{"status":{"type":"string","description":"Status of the return request","enum":["CANCELLING"]}},"description":"Return request modification object."},"VariantMatrixElement":{"type":"object","properties":{"variantValueCategory":{"$ref":"#/components/schemas/VariantValueCategory"},"parentVariantCategory":{"$ref":"#/components/schemas/VariantCategory"},"variantOption":{"$ref":"#/components/schemas/VariantOption"},"elements":{"type":"array","description":"List of elements with the type of variant matrix element","items":{"$ref":"#/components/schemas/VariantMatrixElement"}},"isLeaf":{"type":"boolean"}},"description":"Representation of a Variant Matrix Element"},"VariantValueCategory":{"type":"object","properties":{"name":{"type":"string","description":"Name of the variant value category"},"sequence":{"type":"integer","description":"Sequence number of variant value category","format":"int32"},"superCategories":{"type":"array","description":"Parent category of variant value category","items":{"$ref":"#/components/schemas/VariantCategory"}}},"description":"Representation of a Variant Value Category"},"BaseStore":{"type":"object","properties":{"name":{"type":"string","description":"Base store name"},"externalTaxEnabled":{"type":"boolean","description":"Flag defining is external tax is enabled"},"paymentProvider":{"type":"string","description":"Payment provider"},"createReturnProcessCode":{"type":"string","description":"Create return process code"},"maxRadiusForPosSearch":{"type":"number","description":"Maximum radius for searching point of service","format":"double"},"submitOrderProcessCode":{"type":"string","description":"Submit order process code"},"currencies":{"type":"array","description":"List of currencies","items":{"$ref":"#/components/schemas/Currency"}},"defaultCurrency":{"$ref":"#/components/schemas/Currency"},"defaultDeliveryOrigin":{"$ref":"#/components/schemas/PointOfService"},"defaultLanguage":{"$ref":"#/components/schemas/Language"},"deliveryCountries":{"type":"array","description":"List of delivery countries","items":{"$ref":"#/components/schemas/Country"}},"deliveryModes":{"$ref":"#/components/schemas/DeliveryModeList"},"languages":{"type":"array","description":"List of languages","items":{"$ref":"#/components/schemas/Language"}},"pointsOfService":{"type":"array","description":"List of points of service","items":{"$ref":"#/components/schemas/PointOfService"}},"expressCheckoutEnabled":{"type":"boolean","description":"Flag specifying whether the express checkout option is enabled"}},"description":"Representation of a Base Store"},"StoreCount":{"type":"object","properties":{"type":{"type":"string","description":"Type of store count"},"name":{"type":"string","description":"Name of store count"},"isoCode":{"type":"string","description":"Iso code of store"},"count":{"type":"integer","description":"Count","format":"int32"},"storeCountDataList":{"type":"array","description":"List of store counts","items":{"$ref":"#/components/schemas/StoreCount"}}},"description":"Representation of a Store Count"},"PromotionList":{"type":"object","properties":{"promotions":{"type":"array","description":"List of promotions","items":{"$ref":"#/components/schemas/Promotion"}}},"description":"Representation of a Promotion list"},"ProductSearchPage":{"type":"object","properties":{"freeTextSearch":{"type":"string","description":"Free text search"},"categoryCode":{"type":"string","description":"Code of category"},"keywordRedirectUrl":{"type":"string","description":"Redirect url address keyword"},"spellingSuggestion":{"$ref":"#/components/schemas/SpellingSuggestion"},"products":{"type":"array","description":"List of products","items":{"$ref":"#/components/schemas/Product"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"currentQuery":{"$ref":"#/components/schemas/SearchState"},"breadcrumbs":{"type":"array","description":"List of breadcrumbs info","items":{"$ref":"#/components/schemas/Breadcrumb"}},"facets":{"type":"array","description":"List of facets","items":{"$ref":"#/components/schemas/Facet"}}},"description":"Representation of a Product Search Page"},"RegionList":{"type":"object","properties":{"regions":{"type":"array","description":"This is the list of Region fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Region"}}},"description":"List of Regions"},"CaptchaConfig":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Indicates if the captcha is enabled or not","example":true},"publicKey":{"type":"string","description":"The public key used in captcha validation","example":"6LdeF6tgAAAAAE_T55TB0nmg--qmbnkwqC4LPQbg"}},"description":"Configuration information of captcha"},"ReviewList":{"type":"object","properties":{"reviews":{"type":"array","description":"List of reviews","items":{"$ref":"#/components/schemas/Review"}}},"description":"Representation of a Review List"}},"securitySchemes":{"oauth2_Password":{"type":"oauth2","flows":{"password":{"tokenUrl":"/authorizationserver/oauth/token","scopes":{"basic":""}}}},"oauth2_client_credentials":{"type":"oauth2","flows":{"clientCredentials":{"tokenUrl":"/authorizationserver/oauth/token","scopes":{"extended":""}}}}}},"x-sap-api-type":"REST","x-sap-shortText":"Enables you to manage all of the common commerce functionality.","x-sap-stateInfo":{"state":"Active"},"x-servers":[{"templates":{"url":{"description":"SAP Commerce Cloud server URL where the application is deployed."}},"description":"Commerce Webservices v2 REST API endpoint","url":"https://{url}/occ/v2"}]}